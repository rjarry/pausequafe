/*******************************************************************************
*                                                                              *
* The MIT licence                                                              *
*                                                                              *
* Copyright (c) 2009 PauseQuafe                                                *
* Author : Gregory Boissinot  & Robin Jarry                                    *
*                                                                              *
* Permission is hereby granted, free of charge, to any person obtaining a copy *
* of this software and associated documentation files (the "Software"), to deal*
* in the Software without restriction, including without limitation the rights *
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell    *
* copies of the Software, and to permit persons to whom the Software is        *
* furnished to do so, subject to the following conditions:                     *
*                                                                              *
* The above copyright notice and this permission notice shall be included in   *
* all copies or substantial portions of the Software.                          *
*                                                                              *
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR   *
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,     *
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE  *
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER       *
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,*
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN    *
* THE SOFTWARE.                                                                *
*******************************************************************************/
defaultTasks 'clean', 'distrib'

usePlugin 'java'
usePlugin 'eclipse'
import java.util.Date
import java.text.SimpleDateFormat

format=new SimpleDateFormat('yyyyMMddHHmm')
timestamp=format.format(new Date())
os='win32'
version=os+'-0.0.1beta-'+timestamp
archivesBaseName='pauseQuafe'

manifest.mainAttributes("Main-Class": "org.pausequafe.PQLauncher")

def juicGeneratedDir="$buildDir/generated"
def normalizedBuildDir=buildDir.path.replace('\\','/')
def executableDir="$normalizedBuildDir/executables"
def executablePauseQuafePath="$executableDir/PQ.exe"

task init << {
	file(executableDir).mkdirs()
}

task juic << {
	def juicExecutableLocation="juic.exe"
	def path= System.getenv("PATH") 
	ant.exec(executable: "juic.exe"){
		env(key:"PATH", path:path)
		arg(value:"-d")
		arg(value:juicGeneratedDir)
		arg(value:"-cp")
		arg(value:"src/main")
	} 
}


sourceSets { 
	main {
		java {
			srcDir 'src/main'
		}
	}  
	main {
		java {
			srcDir juicGeneratedDir
		}
	}  
}

repositories {
	flatDir(dirs:'lib')
}

dependencies {
	compile ":jdom:1.0",
		":JEveCore_Modified:2.0",
		":qtjambi:4.5.2_01",
		":qtjambi-win32-msvc2005:4.5.2_01",
		":sqlitejdbc:v054"
}


// TODO Make an executable Gradle task
task wrapExecutable << {
	//TODO Export on a environment variable
	def launch4jDir="D:\\dev\\lib\\Launch4j"

	ant {
		taskdef(name : 'launch4j',
		classname:"net.sf.launch4j.ant.Launch4jTask",
		classpath:"${launch4jDir}/launch4j.jar;${launch4jDir}/lib/xstream.jar")

		launch4j(
			configFile: 'launch4jCommandLine.xml',
			outfile: executablePauseQuafePath,
			jar: jar.archivePath
		)
	}
}

wrapExecutable.dependsOn jar
juic.dependsOn init
compileJava.dependsOn juic


task distrib(type:Zip) {
	dependsOn(wrapExecutable)
	fileSet(dir:'.') {
		include('resources/**/*.*')
		include('settings/*.configuration')
		include('lib/**/*.*')
		exclude('resources/*.db3')
		exclude('lib/**/qtjambi-linux32*.jar')
		exclude('lib/**/qtjambi-macosx*.jar')
		exclude('**/*.svn')
	} 
	fileSet(dir: executableDir)
}


task wrapper(type: Wrapper) {
	gradleVersion = '0.8'
}